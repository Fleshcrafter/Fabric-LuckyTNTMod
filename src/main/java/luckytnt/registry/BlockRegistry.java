package luckytnt.registry;

import java.util.function.Supplier;

import luckytnt.LuckyTNTMod;
import luckytnt.block.ChristmasTNTBlock;
import luckytnt.block.GotthardTunnelBlock;
import luckytnt.block.GunpowderOreBlock;
import luckytnt.block.ItemFireworkBlock;
import luckytnt.block.NuclearWasteBlock;
import luckytnt.block.PresentBlock;
import luckytnt.block.RedstoneTNTBlock;
import luckytnt.block.SmokeTNTBlock;
import luckytnt.block.StructureTNTBlock;
import luckytnt.block.ToxicStoneBlock;
import luckytnt.block.TrollTNTBlock;
import luckytnt.block.TrollTNTMk2Block;
import luckytnt.block.TrollTNTMk3Block;
import luckytnt.block.TunnelingTNTBlock;
import luckytnt.block.UraniumOreBlock;
import luckytnt.block.XRayTNTBlock;
import luckytntlib.block.LTNTBlock;
import luckytntlib.block.LuckyTNTBlock;
import luckytntlib.registry.TNTBlockRegistryData;
import net.minecraft.block.Blocks;
import net.minecraft.block.DetectorRailBlock;
import net.minecraft.block.MapColor;
import net.minecraft.block.PoweredRailBlock;
import net.minecraft.block.RailBlock;
import net.minecraft.block.AbstractBlock;
import net.minecraft.block.Block;

public class BlockRegistry {

	//TNT
	public static final Supplier<LTNTBlock> TNT = LuckyTNTMod.RH.registerTNTBlock(EntityRegistry.TNT, new TNTBlockRegistryData.Builder("tnt").tab(null).addDispenseBehavior(false).makeItem(false).build());

	//Normal TNT
	public static final Supplier<LTNTBlock> TNT_X5 = LuckyTNTMod.RH.registerTNTBlock("tnt_x5", EntityRegistry.TNT_X5, "n", MapColor.COLOR_BLUE, true);
	public static final Supplier<LTNTBlock> TNT_X20 = LuckyTNTMod.RH.registerTNTBlock("tnt_x20", EntityRegistry.TNT_X20, "n", MapColor.COLOR_GREEN, true);
	public static final Supplier<LTNTBlock> TNT_X100 = LuckyTNTMod.RH.registerTNTBlock("tnt_x100", EntityRegistry.TNT_X100, "n", MapColor.COLOR_ORANGE, true);
	public static final Supplier<LTNTBlock> TNT_X500 = LuckyTNTMod.RH.registerTNTBlock("tnt_x500", EntityRegistry.TNT_X500, "n", MapColor.COLOR_BLACK, true);
	public static final Supplier<LTNTBlock> COBBLESTONE_HOUSE_TNT = LuckyTNTMod.RH.registerTNTBlock("cobblestone_house_tnt", EntityRegistry.COBBLESTONE_HOUSE_TNT, "n", true);
	public static final Supplier<LTNTBlock> WOOD_HOUSE_TNT = LuckyTNTMod.RH.registerTNTBlock("woodhouse_tnt", EntityRegistry.WOOD_HOUSE_TNT, "n");
	public static final Supplier<LTNTBlock> BRICK_HOUSE_TNT = LuckyTNTMod.RH.registerTNTBlock("brickhouse_tnt", EntityRegistry.BRICK_HOUSE_TNT, "n");
	public static final Supplier<LTNTBlock> DIGGING_TNT = LuckyTNTMod.RH.registerTNTBlock("digging_tnt", EntityRegistry.DIGGING_TNT, "n");
	public static final Supplier<LTNTBlock> DRILLING_TNT = LuckyTNTMod.RH.registerTNTBlock("drilling_tnt", EntityRegistry.DRILLING_TNT, "n", MapColor.COLOR_ORANGE, true);
	public static final Supplier<LTNTBlock> SPHERE_TNT = LuckyTNTMod.RH.registerTNTBlock("sphere_tnt", EntityRegistry.SPHERE_TNT, "n", MapColor.COLOR_ORANGE, true);
	public static final Supplier<LTNTBlock> FLOATING_ISLAND = LuckyTNTMod.RH.registerTNTBlock(EntityRegistry.FLOATING_ISLAND, new TNTBlockRegistryData.Builder("floating_island").tab("n").description(Component.translatable("item.floating_island.info")).build());
	public static final Supplier<LTNTBlock> OCEAN_TNT = LuckyTNTMod.RH.registerTNTBlock("ocean_tnt", EntityRegistry.OCEAN_TNT, "n", MapColor.COLOR_BLUE, true);
	public static final Supplier<LTNTBlock> HELLFIRE_TNT = LuckyTNTMod.RH.registerTNTBlock("hellfire_tnt", EntityRegistry.HELLFIRE_TNT, "n");
	public static final Supplier<LTNTBlock> FIRE_TNT = LuckyTNTMod.RH.registerTNTBlock("fire_tnt", EntityRegistry.FIRE_TNT, "n", MapColor.COLOR_ORANGE, true);
	public static final Supplier<LTNTBlock> SNOW_TNT = LuckyTNTMod.RH.registerTNTBlock("snow_tnt", EntityRegistry.SNOW_TNT, "n", MapColor.WOOL, true);
	public static final Supplier<LTNTBlock> FREEZE_TNT = LuckyTNTMod.RH.registerTNTBlock("freeze_tnt", EntityRegistry.FREEZE_TNT, "n", MapColor.COLOR_LIGHT_BLUE, true);
	public static final Supplier<LTNTBlock> VAPORIZE_TNT = LuckyTNTMod.RH.registerTNTBlock("vaporize_tnt", EntityRegistry.VAPORIZE_TNT, "n", MapColor.WOOL, true);
	public static final Supplier<LTNTBlock> GRAVITY_TNT = LuckyTNTMod.RH.registerTNTBlock("gravity_tnt", EntityRegistry.GRAVITY_TNT, "n", MapColor.COLOR_GRAY, false);
	public static final Supplier<LTNTBlock> LIGHTNING_TNT = LuckyTNTMod.RH.registerTNTBlock("lightning_tnt", EntityRegistry.LIGHTNING_TNT, "n", MapColor.COLOR_YELLOW, false);
	public static final Supplier<LTNTBlock> CUBIC_TNT = LuckyTNTMod.RH.registerTNTBlock("cubic_tnt", EntityRegistry.CUBIC_TNT, "n");
	public static final Supplier<LTNTBlock> FLOATING_TNT = LuckyTNTMod.RH.registerTNTBlock("floating_tnt", EntityRegistry.FLOATING_TNT, "n", MapColor.COLOR_LIGHT_BLUE, true);
	public static final Supplier<LTNTBlock> TNT_FIREWORK = LuckyTNTMod.RH.registerTNTBlock("tnt_firework", EntityRegistry.TNT_FIREWORK, "n", MapColor.COLOR_BLACK, false);
	public static final Supplier<LTNTBlock> SAND_FIREWORK = LuckyTNTMod.RH.registerTNTBlock("sand_firework", EntityRegistry.SAND_FIREWORK, "n", MapColor.COLOR_YELLOW, false);
	public static final Supplier<LTNTBlock> ARROW_TNT = LuckyTNTMod.RH.registerTNTBlock("arrow_tnt", EntityRegistry.ARROW_TNT, "n", MapColor.COLOR_LIGHT_GRAY, true);
	public static final Supplier<LTNTBlock> TIMER_TNT = LuckyTNTMod.RH.registerTNTBlock("timer_tnt", EntityRegistry.TIMER_TNT, "n", MapColor.COLOR_BLUE, false);
	public static final Supplier<LTNTBlock> FLAT_TNT = LuckyTNTMod.RH.registerTNTBlock("flat_tnt", EntityRegistry.FLAT_TNT, "n", MapColor.COLOR_GREEN, true);
	public static final Supplier<LTNTBlock> MININGFLAT_TNT = LuckyTNTMod.RH.registerTNTBlock("miningflat_tnt", EntityRegistry.MININGFLAT_TNT, "n", MapColor.COLOR_ORANGE, true);
	public static final Supplier<LTNTBlock> COMPACT_TNT = LuckyTNTMod.RH.registerTNTBlock("compact_tnt", EntityRegistry.COMPACT_TNT, "n");
	public static final Supplier<LTNTBlock> ANIMAL_TNT = LuckyTNTMod.RH.registerTNTBlock("animal_tnt", EntityRegistry.ANIMAL_TNT, "n", MapColor.COLOR_BROWN, true);
	public static final Supplier<LTNTBlock> METEOR_TNT = LuckyTNTMod.RH.registerTNTBlock("meteor_tnt", EntityRegistry.METEOR_TNT, "n", false);
	public static final Supplier<LTNTBlock> SPIRAL_TNT = LuckyTNTMod.RH.registerTNTBlock("spiral_tnt", EntityRegistry.SPIRAL_TNT, "n", MapColor.COLOR_BROWN, false);
	public static final Supplier<LTNTBlock> ERUPTING_TNT = LuckyTNTMod.RH.registerTNTBlock("erupting_tnt", EntityRegistry.ERUPTING_TNT, "n", MapColor.COLOR_ORANGE, false);
	public static final Supplier<LTNTBlock> GROVE_TNT = LuckyTNTMod.RH.registerTNTBlock("grove_tnt", EntityRegistry.GROVE_TNT, "n", MapColor.COLOR_BROWN, true);
	public static final Supplier<LTNTBlock> ENDER_TNT = LuckyTNTMod.RH.registerTNTBlock("ender_tnt", EntityRegistry.ENDER_TNT, "n", MapColor.COLOR_GREEN, true);
	public static final Supplier<LTNTBlock> METEOR_SHOWER = LuckyTNTMod.RH.registerTNTBlock("meteor_shower", EntityRegistry.METEOR_SHOWER, "n", MapColor.COLOR_BLUE, false);
	public static final Supplier<LTNTBlock> INVERTED_TNT = LuckyTNTMod.RH.registerTNTBlock("inverted_tnt", EntityRegistry.INVERTED_TNT, "n");
	public static final Supplier<LTNTBlock> NUCLEAR_TNT = LuckyTNTMod.RH.registerTNTBlock("nuclear_tnt", EntityRegistry.NUCLEAR_TNT, "n", MapColor.COLOR_YELLOW, true);
	public static final Supplier<LTNTBlock> CHEMICAL_TNT = LuckyTNTMod.RH.registerTNTBlock("chemical_tnt", EntityRegistry.CHEMICAL_TNT, "n", MapColor.COLOR_CYAN, true);
	public static final Supplier<LTNTBlock> REACTION_TNT = LuckyTNTMod.RH.registerTNTBlock("reaction_tnt", EntityRegistry.REACTION_TNT, "n", MapColor.COLOR_CYAN, false);
	public static final Supplier<LTNTBlock> EASTER_EGG = LuckyTNTMod.RH.registerTNTBlock("easter_egg", EntityRegistry.EASTER_EGG, "n", MapColor.COLOR_GREEN, true);
	public static final Supplier<LTNTBlock> DAY_TNT = LuckyTNTMod.RH.registerTNTBlock("day_tnt", EntityRegistry.DAY_TNT, "n", MapColor.COLOR_LIGHT_BLUE, true);
	public static final Supplier<LTNTBlock> NIGHT_TNT = LuckyTNTMod.RH.registerTNTBlock("night_tnt", EntityRegistry.NIGHT_TNT, "n", MapColor.COLOR_BLACK, true);
	public static final Supplier<LTNTBlock> VILLAGE_DEFENSE = LuckyTNTMod.RH.registerTNTBlock("village_defense", EntityRegistry.VILLAGE_DEFENSE, "n", MapColor.WOOL, true);
	public static final Supplier<LTNTBlock> ZOMBIE_APOCALYPSE = LuckyTNTMod.RH.registerTNTBlock("zombie_apocalypse", EntityRegistry.ZOMBIE_APOCALYPSE, "n", MapColor.COLOR_GREEN, true);
	public static final Supplier<LTNTBlock> SHATTERPROOF_TNT = LuckyTNTMod.RH.registerTNTBlock("shatterproof_tnt", EntityRegistry.SHATTERPROOF_TNT, "n", MapColor.COLOR_BLACK, true);
	public static final Supplier<LTNTBlock> GRAVEL_FIREWORK = LuckyTNTMod.RH.registerTNTBlock("gravel_firework", EntityRegistry.GRAVEL_FIREWORK, "n", MapColor.COLOR_GRAY, false);
	public static final Supplier<LTNTBlock> LAVA_OCEAN_TNT = LuckyTNTMod.RH.registerTNTBlock("lava_ocean_tnt", EntityRegistry.LAVA_OCEAN_TNT, "n", MapColor.COLOR_ORANGE, true);
	public static final Supplier<LTNTBlock> ATTACKING_TNT = LuckyTNTMod.RH.registerLivingTNTBlock("attacking_tnt", EntityRegistry.ATTACKING_TNT, "n", false);
	public static final Supplier<LTNTBlock> WALKING_TNT = LuckyTNTMod.RH.registerLivingTNTBlock("walking_tnt", EntityRegistry.WALKING_TNT, "n", false);
	public static final Supplier<LTNTBlock> WOOL_TNT = LuckyTNTMod.RH.registerTNTBlock("wool_tnt", EntityRegistry.WOOL_TNT, "n", true);
	public static final Supplier<LTNTBlock> SAY_GOODBYE = LuckyTNTMod.RH.registerTNTBlock("say_goodbye", EntityRegistry.SAY_GOODBYE, "n", MapColor.COLOR_GREEN, false);
	public static final Supplier<LTNTBlock> ANGRY_MINERS = LuckyTNTMod.RH.registerTNTBlock("angry_miners", EntityRegistry.ANGRY_MINERS, "n", true);
	public static final Supplier<LTNTBlock> WITHERING_TNT = LuckyTNTMod.RH.registerTNTBlock("withering_tnt", EntityRegistry.WITHERING_TNT, "n", MapColor.COLOR_BROWN, true);
	public static final Supplier<LTNTBlock> NUCLEAR_WASTE_TNT = LuckyTNTMod.RH.registerTNTBlock("nuclear_waste_tnt", EntityRegistry.NUCLEAR_WASTE_TNT, "n", MapColor.COLOR_LIGHT_GREEN, true);
	public static final Supplier<LTNTBlock> STATIC_TNT = LuckyTNTMod.RH.registerTNTBlock("static_tnt", EntityRegistry.STATIC_TNT, "n", MapColor.COLOR_ORANGE, true);
	public static final Supplier<LTNTBlock> PUMPKIN_BOMB = LuckyTNTMod.RH.registerTNTBlock("pumpkin_bomb", EntityRegistry.PUMPKIN_BOMB, "n", MapColor.COLOR_ORANGE, true);
	public static final Supplier<LTNTBlock> SMOKE_TNT = LuckyTNTMod.RH.registerTNTBlock(LuckyTNTMod.MODID, LuckyTNTMod.MODID, () -> new SmokeTNTBlock(AbstractBlock.Settings.create().mapColor(MapColor.COLOR_RED).sound(SoundType.GRASS)), new TNTBlockRegistryData.Builder("smoke_tnt").tab("n").description(Component.translatable("item.smoke_tnt.info")).build());
	public static final Supplier<LTNTBlock> TROLL_TNT = LuckyTNTMod.RH.registerTNTBlock(LuckyTNTMod.MODID, LuckyTNTMod.MODID, () -> new TrollTNTBlock(AbstractBlock.Settings.create().mapColor(MapColor.COLOR_RED).sound(SoundType.GRASS)), new TNTBlockRegistryData.Builder("troll_tnt").tab("n").build());
	public static final Supplier<LTNTBlock> TROLL_TNT_MK2 = LuckyTNTMod.RH.registerTNTBlock(LuckyTNTMod.MODID, LuckyTNTMod.MODID, () -> new TrollTNTMk2Block(AbstractBlock.Settings.create().mapColor(MapColor.COLOR_RED).sound(SoundType.GRASS)), new TNTBlockRegistryData.Builder("troll_tnt_mk2").tab("n").build());
	public static final Supplier<LTNTBlock> TROLL_TNT_MK3 = LuckyTNTMod.RH.registerTNTBlock(LuckyTNTMod.MODID, LuckyTNTMod.MODID, () -> new TrollTNTMk3Block(AbstractBlock.Settings.create().mapColor(MapColor.COLOR_RED).sound(SoundType.GRASS)), new TNTBlockRegistryData.Builder("troll_tnt_mk3").tab("n").build());
	public static final Supplier<LTNTBlock> CLUSTER_BOMB = LuckyTNTMod.RH.registerTNTBlock("cluster_bomb", EntityRegistry.CLUSTER_BOMB_TNT, "n");
	public static final Supplier<LTNTBlock> AIR_STRIKE = LuckyTNTMod.RH.registerTNTBlock("air_strike", EntityRegistry.AIR_STRIKE, "n");
	public static final Supplier<LTNTBlock> SPAMMING_TNT = LuckyTNTMod.RH.registerTNTBlock("spamming_tnt", EntityRegistry.SPAMMING_TNT, "n", MapColor.COLOR_BROWN, false);
	public static final Supplier<LTNTBlock> BOUNCING_TNT = LuckyTNTMod.RH.registerTNTBlock("bouncing_tnt", EntityRegistry.BOUNCING_TNT, "n", MapColor.COLOR_RED, false);
	public static final Supplier<LTNTBlock> ROULETTE_TNT = LuckyTNTMod.RH.registerTNTBlock("roulette_tnt", EntityRegistry.ROULETTE_TNT, "n");
	public static final Supplier<LTNTBlock> SENSOR_TNT = LuckyTNTMod.RH.registerTNTBlock("sensor_tnt", EntityRegistry.SENSOR_TNT, "n", MapColor.COLOR_BLUE, false);
	public static final Supplier<LTNTBlock> RAINBOW_FIREWORK = LuckyTNTMod.RH.registerTNTBlock("rainbow_firework", EntityRegistry.RAINBOW_FIREWORK, "n", MapColor.WOOL, false);
	public static final Supplier<LTNTBlock> XRAY_TNT = LuckyTNTMod.RH.registerTNTBlock(LuckyTNTMod.MODID, LuckyTNTMod.MODID, () -> new XRayTNTBlock(AbstractBlock.Settings.create().mapColor(MapColor.COLOR_RED).noOcclusion().sound(SoundType.GRASS)), new TNTBlockRegistryData.Builder("xray_tnt").tab("n").build());
	public static final Supplier<LTNTBlock> FARMING_TNT = LuckyTNTMod.RH.registerTNTBlock("farming_tnt", EntityRegistry.FARMING_TNT, "n", MapColor.COLOR_BROWN, true);
	public static final Supplier<LTNTBlock> PHANTOM_TNT = LuckyTNTMod.RH.registerTNTBlock("phantom_tnt", EntityRegistry.PHANTOM_TNT, "n", MapColor.COLOR_PURPLE, true);
	public static final Supplier<LTNTBlock> SWAP_TNT = LuckyTNTMod.RH.registerTNTBlock("swap_tnt", EntityRegistry.SWAP_TNT, "n", false);
	public static final Supplier<LTNTBlock> IGNITER_TNT = LuckyTNTMod.RH.registerTNTBlock("igniter_tnt", EntityRegistry.IGNITER_TNT, "n", MapColor.COLOR_LIGHT_GRAY, false);
	public static final Supplier<LTNTBlock> MULTIPLYING_TNT = LuckyTNTMod.RH.registerTNTBlock("multiplying_tnt", EntityRegistry.MULTIPLYING_TNT, "n", MapColor.COLOR_YELLOW, true);
	public static final Supplier<LTNTBlock> BUTTER_TNT = LuckyTNTMod.RH.registerTNTBlock("butter_tnt", EntityRegistry.BUTTER_TNT, "n", MapColor.COLOR_YELLOW, true);
	public static final Supplier<LTNTBlock> TUNNELING_TNT = LuckyTNTMod.RH.registerTNTBlock(LuckyTNTMod.MODID, LuckyTNTMod.MODID, () -> new TunnelingTNTBlock(AbstractBlock.Settings.create().mapColor(MapColor.COLOR_ORANGE).sound(SoundType.GRASS)), new TNTBlockRegistryData.Builder("tunneling_tnt").tab("n").build());
	public static final Supplier<LTNTBlock> PHYSICS_TNT = LuckyTNTMod.RH.registerTNTBlock("physics_tnt", EntityRegistry.PHYSICS_TNT, "n", true);
	public static final Supplier<LTNTBlock> ORE_TNT = LuckyTNTMod.RH.registerTNTBlock("ore_tnt", EntityRegistry.ORE_TNT, "n", MapColor.COLOR_LIGHT_GRAY, false);
	public static final Supplier<LTNTBlock> REDSTONE_TNT = LuckyTNTMod.RH.registerTNTBlock(LuckyTNTMod.MODID, LuckyTNTMod.MODID, () -> new RedstoneTNTBlock(AbstractBlock.Settings.create().mapColor(MapColor.COLOR_RED).sound(SoundType.GRASS)), new TNTBlockRegistryData.Builder("redstone_tnt").tab("n").build());
	public static final Supplier<LTNTBlock> RANDOM_TNT = LuckyTNTMod.RH.registerTNTBlock("random_tnt", EntityRegistry.RANDOM_TNT, "n", true);
	public static final Supplier<LTNTBlock> TURRET_TNT = LuckyTNTMod.RH.registerTNTBlock("turret_tnt", EntityRegistry.TURRET_TNT, "n", MapColor.COLOR_BLUE, false);
	public static final Supplier<LTNTBlock> PULSE_TNT = LuckyTNTMod.RH.registerTNTBlock("pulse_tnt", EntityRegistry.PULSE_TNT, "n", MapColor.COLOR_CYAN, false);
	public static final Supplier<LTNTBlock> DIVIDING_TNT = LuckyTNTMod.RH.registerTNTBlock("dividing_tnt", EntityRegistry.DIVIDING_TNT, "n", MapColor.COLOR_LIGHT_BLUE, false);
	public static final Supplier<LTNTBlock> PICKY_TNT = LuckyTNTMod.RH.registerTNTBlock("picky_tnt", EntityRegistry.PICKY_TNT, "n", true);
	public static final Supplier<LTNTBlock> BIG_TNT = LuckyTNTMod.RH.registerTNTBlock("big_tnt", EntityRegistry.BIG_TNT, "n", true);
	public static final Supplier<LTNTBlock> ICE_METEOR = LuckyTNTMod.RH.registerTNTBlock("ice_meteor_tnt", EntityRegistry.ICE_METEOR_TNT, "n", MapColor.COLOR_LIGHT_BLUE, true);
	public static final Supplier<LTNTBlock> HONEY_TNT = LuckyTNTMod.RH.registerTNTBlock("honey_tnt", EntityRegistry.HONEY_TNT, "n", MapColor.COLOR_YELLOW, true);
	public static final Supplier<LTNTBlock> EATING_TNT = LuckyTNTMod.RH.registerTNTBlock("eating_tnt", EntityRegistry.EATING_TNT, "n", true);
	public static final Supplier<LTNTBlock> LUSH_TNT = LuckyTNTMod.RH.registerTNTBlock("lush_tnt", EntityRegistry.LUSH_TNT, "n", MapColor.COLOR_LIGHT_GREEN, true);
	public static final Supplier<LTNTBlock> GEODE_TNT = LuckyTNTMod.RH.registerTNTBlock("geode_tnt", EntityRegistry.GEODE_TNT, "n", MapColor.COLOR_PURPLE, true);
	public static final Supplier<LTNTBlock> NETHER_GROVE_TNT = LuckyTNTMod.RH.registerTNTBlock("nether_grove_tnt", EntityRegistry.NETHER_GROVE_TNT, "n", MapColor.COLOR_CYAN, true);
	public static final Supplier<LTNTBlock> DRIPSTONE_TNT = LuckyTNTMod.RH.registerTNTBlock("dripstone_tnt", EntityRegistry.DRIPSTONE_TNT, "n", MapColor.COLOR_BROWN, true);
	public static final Supplier<LTNTBlock> GRAVEYARD_TNT = LuckyTNTMod.RH.registerTNTBlock("graveyard_tnt", EntityRegistry.GRAVEYARD_TNT, "n", MapColor.COLOR_GRAY, true);
	public static final Supplier<LTNTBlock> REPLAY_TNT = LuckyTNTMod.RH.registerTNTBlock("replay_tnt", EntityRegistry.REPLAY_TNT, "n", false);
	public static final Supplier<LTNTBlock> END_TNT = LuckyTNTMod.RH.registerTNTBlock("end_tnt", EntityRegistry.END_TNT, "n", MapColor.COLOR_BLACK, true);
	public static final Supplier<LTNTBlock> CHRISTMAS_TNT = LuckyTNTMod.RH.registerTNTBlock(LuckyTNTMod.MODID, LuckyTNTMod.MODID, () -> new ChristmasTNTBlock(), new TNTBlockRegistryData.Builder("christmas_tnt").randomizedFuseUponExploded(false).tab("n").build());
	public static final Supplier<LTNTBlock> EARTHQUAKE_TNT = LuckyTNTMod.RH.registerTNTBlock("earthquake_tnt", EntityRegistry.EARTHQUAKE_TNT, "n", MapColor.COLOR_LIGHT_BLUE, false);
	public static final Supplier<LTNTBlock> PRISM_TNT = LuckyTNTMod.RH.registerTNTBlock("prism_tnt", EntityRegistry.PRISM_TNT, "n", MapColor.COLOR_RED, true);
	public static final Supplier<LTNTBlock> RING_TNT = LuckyTNTMod.RH.registerTNTBlock("ring_tnt", EntityRegistry.RING_TNT, "n", MapColor.COLOR_RED, true);
	public static final Supplier<LTNTBlock> SCULK_TNT = LuckyTNTMod.RH.registerTNTBlock("sculk_tnt", EntityRegistry.SCULK_TNT, "n", MapColor.COLOR_RED, true);
	
	public static final Supplier<LTNTBlock> LUCKY_TNT = LuckyTNTMod.RH.registerTNTBlock(LuckyTNTMod.MODID, LuckyTNTMod.MODID, () -> new LuckyTNTBlock(AbstractBlock.Settings.create().mapColor(MapColor.COLOR_RED).sound(SoundType.GRASS), LuckyTNTMod.RH.TNTLists.get("n")), new TNTBlockRegistryData.Builder("lucky_tnt").tab("n").build());
	
	//God TNT
	public static final Supplier<LTNTBlock> GLOBAL_DISASTER = LuckyTNTMod.RH.registerTNTBlock("global_disaster", EntityRegistry.GLOBAL_DISASTER, "g", MapColor.COLOR_BLUE, true);
	public static final Supplier<LTNTBlock> HEAVENS_GATE = LuckyTNTMod.RH.registerTNTBlock("heavens_gate", EntityRegistry.HEAVENS_GATE, "g", MapColor.QUARTZ, true);
	public static final Supplier<LTNTBlock> HELLS_GATE = LuckyTNTMod.RH.registerTNTBlock("hells_gate", EntityRegistry.HELLS_GATE, "g", MapColor.COLOR_RED, true);
	public static final Supplier<LTNTBlock> MANKINDS_MARK = LuckyTNTMod.RH.registerTNTBlock("mankinds_mark", EntityRegistry.MANKINDS_MARK, "g", MapColor.COLOR_RED, true);
	public static final Supplier<LTNTBlock> POSEIDONS_WAVE = LuckyTNTMod.RH.registerTNTBlock("poseidons_wave", EntityRegistry.POSEIDONS_WAVE, "g", MapColor.COLOR_BLUE, false);
	public static final Supplier<LTNTBlock> HEXAHEDRON = LuckyTNTMod.RH.registerTNTBlock("hexahedron", EntityRegistry.HEXAHEDRON, "g", MapColor.COLOR_BLACK, true);
	public static final Supplier<LTNTBlock> MOUNTAINTOP_REMOVAL = LuckyTNTMod.RH.registerTNTBlock("mountaintop_removal", EntityRegistry.MOUNTAINTOP_REMOVAL, "g", MapColor.COLOR_LIGHT_BLUE, true);
	public static final Supplier<LTNTBlock> DUST_BOWL = LuckyTNTMod.RH.registerTNTBlock("dust_bowl", EntityRegistry.DUST_BOWL, "g", MapColor.SAND, true);
	public static final Supplier<LTNTBlock> THE_REVOLUTION = LuckyTNTMod.RH.registerTNTBlock("the_revolution", EntityRegistry.THE_REVOLUTION, "g", MapColor.QUARTZ, true);
	public static final Supplier<LTNTBlock> POMPEII = LuckyTNTMod.RH.registerTNTBlock("pompeii", EntityRegistry.POMPEII, "g", MapColor.COLOR_GRAY, true);
	public static final Supplier<LTNTBlock> CHICXULUB = LuckyTNTMod.RH.registerTNTBlock("chicxulub", EntityRegistry.CHICXULUB, "g", MapColor.COLOR_BLUE, true);
	public static final Supplier<LTNTBlock> UNBREAKABLE_TNT = LuckyTNTMod.RH.registerTNTBlock("unbreakable_tnt", EntityRegistry.UNBREAKABLE_TNT, "g", MapColor.COLOR_LIGHT_GRAY, true);
	public static final Supplier<LTNTBlock> END_GATE = LuckyTNTMod.RH.registerTNTBlock("end_gate", EntityRegistry.END_GATE, "g", MapColor.COLOR_BLACK, true);
	public static final Supplier<LTNTBlock> DENSE_TNT = LuckyTNTMod.RH.registerTNTBlock("dense_tnt", EntityRegistry.DENSE_TNT, "g", MapColor.COLOR_RED, true);
	public static final Supplier<LTNTBlock> HYPERION = LuckyTNTMod.RH.registerTNTBlock("hyperion", EntityRegistry.HYPERION, "g", MapColor.COLOR_LIGHT_BLUE, true);
	public static final Supplier<LTNTBlock> TNT_X2000 = LuckyTNTMod.RH.registerTNTBlock("tnt_x2000", EntityRegistry.TNT_X2000, "g", MapColor.COLOR_YELLOW, true);
	public static final Supplier<LTNTBlock> TSAR_BOMBA = LuckyTNTMod.RH.registerTNTBlock("tsar_bomba", EntityRegistry.TSAR_BOMBA, "g", MapColor.COLOR_YELLOW, true);
	public static final Supplier<LTNTBlock> TOXIC_CLOUDS = LuckyTNTMod.RH.registerTNTBlock("toxic_clouds", EntityRegistry.TOXIC_CLOUDS, "g", MapColor.COLOR_GREEN, true);
	public static final Supplier<LTNTBlock> DISASTER_CLEARER = LuckyTNTMod.RH.registerTNTBlock("disaster_clearer", EntityRegistry.DISASTER_CLEARER, "g", MapColor.COLOR_BLUE, true);
	public static final Supplier<LTNTBlock> WITHER_STORM = LuckyTNTMod.RH.registerTNTBlock("wither_storm", EntityRegistry.WITHER_STORM, "g", MapColor.COLOR_BROWN, true);
	public static final Supplier<LTNTBlock> LEAPING_TNT = LuckyTNTMod.RH.registerTNTBlock("leaping_tnt", EntityRegistry.LEAPING_TNT, "g", MapColor.COLOR_ORANGE, true);
	public static final Supplier<LTNTBlock> RUSSIAN_ROULETTE = LuckyTNTMod.RH.registerTNTBlock("russian_roulette", EntityRegistry.RUSSIAN_ROULETTE, "g", MapColor.COLOR_BLACK, true);
	public static final Supplier<LTNTBlock> KNOCKBACK_TNT = LuckyTNTMod.RH.registerTNTBlock("knockback_tnt", EntityRegistry.KNOCKBACK_TNT, "g", MapColor.COLOR_GREEN, true);
	public static final Supplier<LTNTBlock> MIDAS_TNT = LuckyTNTMod.RH.registerTNTBlock("midas_tnt", EntityRegistry.MIDAS_TNT, "g", MapColor.COLOR_BLACK, true);
	public static final Supplier<LTNTBlock> NEW_YEARS_FIREWORK = LuckyTNTMod.RH.registerTNTBlock("new_years_firework", EntityRegistry.NEW_YEARS_FIREWORK, "g", MapColor.COLOR_BLACK, true);
	public static final Supplier<LTNTBlock> PULSAR_TNT = LuckyTNTMod.RH.registerTNTBlock("pulsar_tnt", EntityRegistry.PULSAR_TNT, "g", MapColor.COLOR_PURPLE, false);
	public static final Supplier<LTNTBlock> LIGHTNING_STORM = LuckyTNTMod.RH.registerTNTBlock("lightning_storm", EntityRegistry.LIGHTNING_STORM, "g", MapColor.COLOR_GRAY, true);
	public static final Supplier<LTNTBlock> SILK_TOUCH_TNT = LuckyTNTMod.RH.registerTNTBlock("silk_touch_tnt", EntityRegistry.SILK_TOUCH_TNT, "g", MapColor.COLOR_PURPLE, true);
	public static final Supplier<LTNTBlock> ITEM_FIREWORK = LuckyTNTMod.RH.registerTNTBlock(LuckyTNTMod.MODID, LuckyTNTMod.MODID, () -> new ItemFireworkBlock(AbstractBlock.Settings.create().mapColor(MapColor.COLOR_BLACK).sound(SoundType.GRASS)), new TNTBlockRegistryData.Builder("item_firework").description(Component.translatable("item.item_firework.info")).tab("g").build());
	public static final Supplier<LTNTBlock> ANIMAL_KINGDOM = LuckyTNTMod.RH.registerTNTBlock("animal_kingdom", EntityRegistry.ANIMAL_KINGDOM, "g", MapColor.COLOR_LIGHT_BLUE, true);
	public static final Supplier<LTNTBlock> ICE_AGE = LuckyTNTMod.RH.registerTNTBlock("ice_age", EntityRegistry.ICE_AGE, "g", MapColor.QUARTZ, true);
	public static final Supplier<LTNTBlock> GIANT_TNT = LuckyTNTMod.RH.registerTNTBlock("giant_tnt", EntityRegistry.GIANT_TNT, "g", MapColor.COLOR_RED, true);
	public static final Supplier<LTNTBlock> MIMIC_TNT = LuckyTNTMod.RH.registerTNTBlock("mimic_tnt", EntityRegistry.MIMIC_TNT, "g", MapColor.COLOR_RED, true);
	public static final Supplier<LTNTBlock> REVERSED_TNT = LuckyTNTMod.RH.registerTNTBlock("reversed_tnt", EntityRegistry.REVERSED_TNT, "g", MapColor.COLOR_LIGHT_BLUE, true);
	public static final Supplier<LTNTBlock> ENTITY_FIREWORK = LuckyTNTMod.RH.registerTNTBlock(EntityRegistry.ENTITY_FIREWORK, new TNTBlockRegistryData.Builder("entity_firework").color(MapColor.COLOR_BLACK).description(Component.translatable("item.entity_firework.info")).randomizedFuseUponExploded(false).tab("g").build());
	public static final Supplier<LTNTBlock> CUSTOM_TNT = LuckyTNTMod.RH.registerTNTBlock(EntityRegistry.CUSTOM_TNT, new TNTBlockRegistryData.Builder("custom_tnt").color(MapColor.COLOR_GRAY).description(Component.translatable("item.custom_tnt.info")).tab("g").build());
	public static final Supplier<LTNTBlock> RESET_TNT = LuckyTNTMod.RH.registerTNTBlock("reset_tnt", EntityRegistry.RESET_TNT, "g", MapColor.COLOR_RED, false);
	public static final Supplier<LTNTBlock> VICIOUS_TNT = LuckyTNTMod.RH.registerLivingTNTBlock("vicious_tnt", EntityRegistry.VICIOUS_TNT, "g", MapColor.COLOR_RED, false);
	public static final Supplier<LTNTBlock> HUNGRY_TNT = LuckyTNTMod.RH.registerTNTBlock("hungry_tnt", EntityRegistry.HUNGRY_TNT, "g", MapColor.COLOR_ORANGE, true);
	public static final Supplier<LTNTBlock> SINKHOLE_TNT = LuckyTNTMod.RH.registerTNTBlock("sinkhole_tnt", EntityRegistry.SINKHOLE_TNT, "g", MapColor.COLOR_BLACK, false);
	public static final Supplier<LTNTBlock> FIRESTORM_TNT = LuckyTNTMod.RH.registerTNTBlock("firestorm_tnt", EntityRegistry.FIRESTORM_TNT, "g", MapColor.COLOR_RED, true);
	public static final Supplier<LTNTBlock> SNOWSTORM_TNT = LuckyTNTMod.RH.registerTNTBlock("snowstorm_tnt", EntityRegistry.SNOWSTORM_TNT, "g", MapColor.SNOW, true);
	public static final Supplier<LTNTBlock> ACIDIC_TNT = LuckyTNTMod.RH.registerTNTBlock("acidic_tnt", EntityRegistry.ACIDIC_TNT, "g", MapColor.COLOR_YELLOW, true);
	public static final Supplier<LTNTBlock> CATALYST_TNT = LuckyTNTMod.RH.registerTNTBlock("catalyst_tnt", EntityRegistry.CATALYST_TNT, "g", MapColor.COLOR_RED, true);
	public static final Supplier<LTNTBlock> CANNON_TNT = LuckyTNTMod.RH.registerTNTBlock("cannon_tnt", EntityRegistry.CANNON_TNT, "g", MapColor.COLOR_BLACK, true);
	public static final Supplier<LTNTBlock> PLANTATION_TNT = LuckyTNTMod.RH.registerTNTBlock("plantation_tnt", EntityRegistry.PLANTATION_TNT, "g", MapColor.COLOR_LIGHT_GREEN, true);
	public static final Supplier<LTNTBlock> GOTTHARD_TUNNEL = LuckyTNTMod.RH.registerTNTBlock(LuckyTNTMod.MODID, LuckyTNTMod.MODID, () -> new GotthardTunnelBlock(AbstractBlock.Settings.create().mapColor(MapColor.STONE).sound(SoundType.GRASS)), new TNTBlockRegistryData.Builder("gotthard_tunnel").tab("g").description(Component.translatable("item.gotthard_tunnel.info")).build());
	public static final Supplier<LTNTBlock> LEVITATING_TNT = LuckyTNTMod.RH.registerTNTBlock("levitating_tnt", EntityRegistry.LEVITATING_TNT, "g", MapColor.COLOR_CYAN, true);
	public static final Supplier<LTNTBlock> SQUARING_TNT = LuckyTNTMod.RH.registerTNTBlock("squaring_tnt", EntityRegistry.SQUARING_TNT, "g", MapColor.TERRACOTTA_PINK, true);
	public static final Supplier<LTNTBlock> MINERAL_TNT = LuckyTNTMod.RH.registerTNTBlock("mineral_tnt", EntityRegistry.MINERAL_TNT, "g", MapColor.DIAMOND, true);
	public static final Supplier<LTNTBlock> FLOWER_FOREST_TNT = LuckyTNTMod.RH.registerTNTBlock("flower_forest_tnt", EntityRegistry.FLOWER_FOREST_TNT, "g", MapColor.COLOR_LIGHT_BLUE, true);
	public static final Supplier<LTNTBlock> ICY_TNT = LuckyTNTMod.RH.registerTNTBlock("icy_tnt", EntityRegistry.ICY_TNT, "g", MapColor.COLOR_LIGHT_BLUE, true);
	public static final Supplier<LTNTBlock> GHOST_TNT = LuckyTNTMod.RH.registerTNTBlock("ghost_tnt", EntityRegistry.GHOST_TNT, "g", MapColor.COLOR_LIGHT_GRAY, false);
	public static final Supplier<LTNTBlock> PARTICLE_PHYSICS_TNT = LuckyTNTMod.RH.registerTNTBlock("particle_physics_tnt", EntityRegistry.PARTICLE_PHYSICS_TNT, "g", MapColor.COLOR_RED, true);
	public static final Supplier<LTNTBlock> HEAT_DEATH = LuckyTNTMod.RH.registerTNTBlock("heat_death", EntityRegistry.HEAT_DEATH, "g", MapColor.COLOR_ORANGE, true);
	public static final Supplier<LTNTBlock> CONTINENTAL_DRIFT = LuckyTNTMod.RH.registerTNTBlock("continental_drift", EntityRegistry.CONTINENTAL_DRIFT, "g", MapColor.COLOR_LIGHT_BLUE, false);
	public static final Supplier<LTNTBlock> TETRAHEDRON_TNT = LuckyTNTMod.RH.registerTNTBlock("tetrahedron_tnt", EntityRegistry.TETRAHEDRON_TNT, "g", MapColor.COLOR_ORANGE, true);
	public static final Supplier<LTNTBlock> EYE_OF_THE_SAHARA = LuckyTNTMod.RH.registerTNTBlock("eye_of_the_sahara", EntityRegistry.EYE_OF_THE_SAHARA, "g", MapColor.COLOR_YELLOW, true);
	public static final Supplier<LTNTBlock> WORLD_OF_WOOLS = LuckyTNTMod.RH.registerTNTBlock("world_of_wools", EntityRegistry.WORLD_OF_WOOLS, "g", MapColor.COLOR_LIGHT_BLUE, true);
	public static final Supplier<LTNTBlock> DEIMOS = LuckyTNTMod.RH.registerTNTBlock("deimos", EntityRegistry.DEIMOS, "g", MapColor.COLOR_LIGHT_BLUE, true);
	public static final Supplier<LTNTBlock> PRESENT_DROP = LuckyTNTMod.RH.registerTNTBlock("present_drop", EntityRegistry.PRESENT_DROP, "g", MapColor.COLOR_LIGHT_BLUE, true);
	
	public static final Supplier<LTNTBlock> LUCKY_GOD = LuckyTNTMod.RH.registerTNTBlock(LuckyTNTMod.MODID, LuckyTNTMod.MODID, () -> new LuckyTNTBlock(AbstractBlock.Settings.create().mapColor(MapColor.COLOR_RED).sound(SoundType.GRASS), LuckyTNTMod.RH.TNTLists.get("g")), new TNTBlockRegistryData.Builder("lucky_god").tab("g").build());
	
	//Doomsday
	public static final Supplier<LTNTBlock> SUPERNOVA = LuckyTNTMod.RH.registerTNTBlock("supernova", EntityRegistry.SUPERNOVA, "d", MapColor.COLOR_PURPLE, false);
	public static final Supplier<LTNTBlock> CITY_FIREWORK = LuckyTNTMod.RH.registerTNTBlock("city_firework", EntityRegistry.CITY_FIREWORK, "d", MapColor.COLOR_RED, true);
	public static final Supplier<LTNTBlock> METEOR_STORM = LuckyTNTMod.RH.registerTNTBlock("meteor_storm", EntityRegistry.METEOR_STORM, "d", MapColor.COLOR_BLUE, true);
	public static final Supplier<LTNTBlock> CHUNK_TNT = LuckyTNTMod.RH.registerTNTBlock("chunk_tnt", EntityRegistry.CHUNK_TNT, "d", MapColor.COLOR_PURPLE, false);
	public static final Supplier<LTNTBlock> COMPRESSED_TNT = LuckyTNTMod.RH.registerTNTBlock("compressed_tnt", EntityRegistry.COMPRESSED_TNT, "d", MapColor.COLOR_BLACK, true);
	public static final Supplier<LTNTBlock> EXTINCTION = LuckyTNTMod.RH.registerTNTBlock("extinction", EntityRegistry.EXTINCTION, "d", MapColor.COLOR_ORANGE, true);
	public static final Supplier<LTNTBlock> MANSION = LuckyTNTMod.RH.registerTNTBlock("mansion", EntityRegistry.MANSION, "d", MapColor.COLOR_RED, true);
	public static final Supplier<LTNTBlock> HELIX = LuckyTNTMod.RH.registerTNTBlock("helix", EntityRegistry.HELIX, "d", MapColor.QUARTZ, false);
	public static final Supplier<LTNTBlock> DEATH_RAY = LuckyTNTMod.RH.registerTNTBlock("death_ray", EntityRegistry.DEATH_RAY, "d", MapColor.COLOR_GRAY, false);
	public static final Supplier<LTNTBlock> DOOMSDAY = LuckyTNTMod.RH.registerTNTBlock("doomsday", EntityRegistry.DOOMSDAY, "d", MapColor.COLOR_BLACK, true);
	public static final Supplier<LTNTBlock> FIERY_HELL = LuckyTNTMod.RH.registerTNTBlock("fiery_hell", EntityRegistry.FIERY_HELL, "d", MapColor.COLOR_ORANGE, true);
	public static final Supplier<LTNTBlock> STONE_COLD = LuckyTNTMod.RH.registerTNTBlock("stone_cold", EntityRegistry.STONE_COLD, "d", MapColor.COLOR_LIGHT_BLUE, true);
	public static final Supplier<LTNTBlock> JUNGLE_TNT = LuckyTNTMod.RH.registerTNTBlock("jungle_tnt", EntityRegistry.JUNGLE_TNT, "d", MapColor.COLOR_GREEN, true);
	public static final Supplier<LTNTBlock> JUMPING_TNT = LuckyTNTMod.RH.registerTNTBlock("jumping_tnt", EntityRegistry.JUMPING_TNT, "d", MapColor.COLOR_YELLOW, true);
	public static final Supplier<LTNTBlock> WASTELAND_TNT = LuckyTNTMod.RH.registerTNTBlock("wasteland_tnt", EntityRegistry.WASTELAND_TNT, "d", MapColor.COLOR_GRAY, true);
	public static final Supplier<LTNTBlock> TNT_X10000 = LuckyTNTMod.RH.registerTNTBlock("tnt_x10000", EntityRegistry.TNT_X10000, "d", MapColor.COLOR_PINK, true);
	public static final Supplier<LTNTBlock> CUSTOM_FIREWORK = LuckyTNTMod.RH.registerTNTBlock(EntityRegistry.CUSTOM_FIREWORK, new TNTBlockRegistryData.Builder("custom_firework").color(MapColor.COLOR_LIGHT_GRAY).description(Component.translatable("item.custom_firework.info")).randomizedFuseUponExploded(false).tab("d").build());
	public static final Supplier<LTNTBlock> ATLANTIS = LuckyTNTMod.RH.registerTNTBlock("atlantis", EntityRegistry.ATLANTIS, "d", MapColor.COLOR_BLUE, false);
	public static final Supplier<LTNTBlock> SOLAR_ERUPTION = LuckyTNTMod.RH.registerTNTBlock("solar_eruption", EntityRegistry.SOLAR_ERUPTION, "d", MapColor.COLOR_BLACK, true);
	public static final Supplier<LTNTBlock> VREDEFORT = LuckyTNTMod.RH.registerTNTBlock("vredefort", EntityRegistry.VREDEFORT, "d", MapColor.COLOR_BLUE, true);
	public static final Supplier<LTNTBlock> COLOSSAL_TNT = LuckyTNTMod.RH.registerTNTBlock("colossal_tnt", EntityRegistry.COLOSSAL_TNT, "d", MapColor.COLOR_RED, true);
	public static final Supplier<LTNTBlock> STRUCTURE_TNT = LuckyTNTMod.RH.registerTNTBlock(LuckyTNTMod.MODID, LuckyTNTMod.MODID, () -> new StructureTNTBlock(AbstractBlock.Settings.create().mapColor(MapColor.COLOR_BLACK).sound(SoundType.GRASS)), new TNTBlockRegistryData.Builder("structure_tnt").description(Component.translatable("item.structure_tnt.info")).tab("d").build());
	public static final Supplier<LTNTBlock> GRANDE_FINALE = LuckyTNTMod.RH.registerTNTBlock(EntityRegistry.GRANDE_FINALE, new TNTBlockRegistryData.Builder("grande_finale").color(MapColor.COLOR_BLACK).description(Component.translatable("item.grande_finale.info")).tab("d").build());
	public static final Supplier<LTNTBlock> FLAT_EARTH = LuckyTNTMod.RH.registerTNTBlock("flat_earth", EntityRegistry.FLAT_EARTH, "d", MapColor.COLOR_BLACK, true);
	public static final Supplier<LTNTBlock> EVIL_TNT = LuckyTNTMod.RH.registerLivingTNTBlock("evil_tnt", EntityRegistry.EVIL_TNT, "d", MapColor.COLOR_RED, true);
	public static final Supplier<LTNTBlock> KOLA_BOREHOLE_TNT = LuckyTNTMod.RH.registerTNTBlock("kola_borehole_tnt", EntityRegistry.KOLA_BOREHOLE_TNT, "d", MapColor.COLOR_BLACK, true);
	public static final Supplier<LTNTBlock> HYDROGEN_BOMB = LuckyTNTMod.RH.registerTNTBlock("hydrogen_bomb", EntityRegistry.HYDROGEN_BOMB, "d", MapColor.COLOR_PURPLE, true);
	public static final Supplier<LTNTBlock> FLUORINE_TNT = LuckyTNTMod.RH.registerTNTBlock("fluorine_tnt", EntityRegistry.FLUORINE_TNT, "d", MapColor.COLOR_YELLOW, false);
	public static final Supplier<LTNTBlock> DISINTEGRATING_TNT = LuckyTNTMod.RH.registerTNTBlock("disintegrating_tnt", EntityRegistry.DISINTEGRATING_TNT, "d", MapColor.SNOW, true);
	public static final Supplier<LTNTBlock> FLYING_TNT = LuckyTNTMod.RH.registerTNTBlock("flying_tnt", EntityRegistry.FLYING_TNT, "d", MapColor.COLOR_LIGHT_GREEN, true);
	public static final Supplier<LTNTBlock> HEAT_WAVE = LuckyTNTMod.RH.registerTNTBlock("heat_wave", EntityRegistry.HEAT_WAVE, "d", MapColor.COLOR_RED, true);
	public static final Supplier<LTNTBlock> WINTER_TNT = LuckyTNTMod.RH.registerTNTBlock("winter_tnt", EntityRegistry.WINTER_TNT, "d", MapColor.QUARTZ, true);
	public static final Supplier<LTNTBlock> BLACK_HOLE_TNT = LuckyTNTMod.RH.registerTNTBlock("black_hole_tnt", EntityRegistry.BLACK_HOLE_TNT, "d", MapColor.COLOR_BLACK, true);
	public static final Supplier<LTNTBlock> FLAK_TNT = LuckyTNTMod.RH.registerTNTBlock("flak_tnt", EntityRegistry.FLAK_TNT, "d", MapColor.COLOR_YELLOW, true);
	public static final Supplier<LTNTBlock> TNT_RAIN = LuckyTNTMod.RH.registerTNTBlock("tnt_rain", EntityRegistry.TNT_RAIN, "d", MapColor.COLOR_GRAY, true);
	public static final Supplier<LTNTBlock> ILLUMINATI_TNT = LuckyTNTMod.RH.registerTNTBlock("illuminati_tnt", EntityRegistry.ILLUMINATI_TNT, "d", MapColor.COLOR_BLACK, true);
	public static final Supplier<LTNTBlock> ASTEROID_BELT = LuckyTNTMod.RH.registerTNTBlock("asteroid_belt", EntityRegistry.ASTEROID_BELT, "d", MapColor.COLOR_BLUE, true);
	public static final Supplier<LTNTBlock> NETHER_TNT = LuckyTNTMod.RH.registerTNTBlock("nether_tnt", EntityRegistry.NETHER_TNT, "d", MapColor.COLOR_RED, true);
	public static final Supplier<LTNTBlock> AETHER_TNT = LuckyTNTMod.RH.registerTNTBlock("aether_tnt", EntityRegistry.AETHER_TNT, "d", MapColor.COLOR_LIGHT_BLUE, true);
	public static final Supplier<LTNTBlock> PHOBOS = LuckyTNTMod.RH.registerTNTBlock("phobos", EntityRegistry.PHOBOS, "d", MapColor.COLOR_LIGHT_BLUE, true);
	
	public static final Supplier<LTNTBlock> LUCKY_DOOMSDAY = LuckyTNTMod.RH.registerTNTBlock(LuckyTNTMod.MODID, LuckyTNTMod.MODID, () -> new LuckyTNTBlock(AbstractBlock.Settings.create().mapColor(MapColor.COLOR_RED).sound(SoundType.GRASS), LuckyTNTMod.RH.TNTLists.get("d")), new TNTBlockRegistryData.Builder("lucky_doomsday").tab("d").build());
	
	//Other
	public static final Supplier<Block> NUCLEAR_WASTE = LuckyTNTMod.MODID.register("nuclear_waste", () -> new NuclearWasteBlock(AbstractBlock.Settings.create().luminance(state -> {return 8;}).mapColor(MapColor.COLOR_GREEN).sound(SoundType.SLIME_BLOCK).instabreak().noCollission().noLootTable().randomTicks().lightLevel(s -> 8)));
	public static final Supplier<Block> GUNPOWDER_ORE = LuckyTNTMod.MODID.register("gunpowder_ore", () -> new GunpowderOreBlock(AbstractBlock.Settings.create().mapColor(MapColor.COLOR_LIGHT_GRAY).sound(SoundType.STONE).requiresCorrectToolForDrops().strength(3f, 3f)));
	public static final Supplier<Block> DEEPSLATE_GUNPOWDER_ORE = LuckyTNTMod.MODID.register("deepslate_gunpowder_ore", () -> new GunpowderOreBlock(AbstractBlock.Settings.create().mapColor(MapColor.COLOR_LIGHT_GRAY).sound(SoundType.DEEPSLATE).requiresCorrectToolForDrops().strength(4.5f, 3f)));
	public static final Supplier<Block> URANIUM_ORE = LuckyTNTMod.MODID.register("uranium_ore", () -> new UraniumOreBlock(AbstractBlock.Settings.create().mapColor(MapColor.COLOR_LIGHT_GREEN).sound(SoundType.STONE).requiresCorrectToolForDrops().strength(3f, 3f)));
	public static final Supplier<Block> DEEPSLATE_URANIUM_ORE = LuckyTNTMod.MODID.register("deepslate_uranium_ore", () -> new UraniumOreBlock(AbstractBlock.Settings.create().mapColor(MapColor.COLOR_LIGHT_GREEN).sound(SoundType.DEEPSLATE).requiresCorrectToolForDrops().strength(4.5f, 3f)));
	public static final Supplier<Block> OBSIDIAN_RAIL = LuckyTNTMod.MODID.register("obsidian_rail", () -> new RailBlock(AbstractBlock.Settings.create().mapColor(MapColor.NONE).sound(SoundType.METAL).requiresCorrectToolForDrops().strength(0.7f, 1200f).noCollission()));
	public static final Supplier<Block> OBSIDIAN_POWERED_RAIL = LuckyTNTMod.MODID.register("obsidian_powered_rail", () -> new PoweredRailBlock(AbstractBlock.Settings.create().mapColor(MapColor.NONE).sound(SoundType.METAL).requiresCorrectToolForDrops().strength(0.7f, 1200f).noCollission()) {
		@Override
		public boolean isActivatorRail() {
			return false;
		}
	});
	public static final Supplier<Block> OBSIDIAN_ACTIVATOR_RAIL = LuckyTNTMod.MODID.register("obsidian_activator_rail", () -> new PoweredRailBlock(AbstractBlock.Settings.create().mapColor(MapColor.NONE).sound(SoundType.METAL).requiresCorrectToolForDrops().strength(0.7f, 1200f).noCollission()));
	public static final Supplier<Block> OBSIDIAN_DETECTOR_RAIL = LuckyTNTMod.MODID.register("obsidian_detector_rail", () -> new DetectorRailBlock(AbstractBlock.Settings.create().mapColor(MapColor.NONE).sound(SoundType.METAL).requiresCorrectToolForDrops().strength(0.7f, 1200f).noCollission()));
	public static final Supplier<Block> TOXIC_STONE = LuckyTNTMod.MODID.register("toxic_stone", () -> new ToxicStoneBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.STONE).mapColor(MapColor.COLOR_GREEN).lootFrom(() -> Blocks.STONE)));
	public static final Supplier<Block> PRESENT = LuckyTNTMod.MODID.register("present", () -> new PresentBlock(AbstractBlock.Settings.create().mapColor(MapColor.COLOR_RED).sound(SoundType.WOOL).strength(0.3f, 0f)));
}
